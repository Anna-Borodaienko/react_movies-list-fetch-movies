{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","imgUrl","title","description","imdbId","className","src","alt","href","MoviesList","movies","map","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","setQuery","addMovie","useState","setMovie","isError","setIsError","isLoading","setIsLoading","handleSubmit","event","a","preventDefault","foundMovie","newMovie","Title","Plot","Poster","imdbUrl","imdbID","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","find","elem","movies2","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e805787.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imgUrl,\n    title,\n    description,\n    imdbId,\n  } = movie;\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n          <br />\n          <a href={`https://www.imdb.com/title/${imdbId}`} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n// import { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=68fbcc03';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard/MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  query: string;\n  setQuery: (query: string) => void;\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ query, setQuery, addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setIsError(false);\n  };\n\n  const clearMovie = () => {\n    setMovie(null);\n  };\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    try {\n      setIsLoading(true);\n      const foundMovie = await getMovie(query);\n\n      if ('Error' in foundMovie) {\n        setIsError(true);\n      } else {\n        const newMovie = {\n          title: foundMovie.Title,\n          description: foundMovie.Plot,\n          imgUrl: foundMovie.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : foundMovie.Poster,\n          imdbUrl: `https://www.imdb.com/title/${foundMovie.imdbID}`,\n          imdbId: foundMovie.imdbID,\n        };\n\n        setMovie(newMovie);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={event => handleSubmit(event)}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleInput}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  addMovie(movie);\n                  clearMovie();\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [query, setQuery] = useState('');\n\n  const addMovie = (movie: Movie) => {\n    const movieIsExist = movies.find(elem => elem.imdbId === movie.imdbId);\n\n    if (!movieIsExist) {\n      setMovies(movies2 => [...movies2, movie]);\n    }\n\n    setQuery('');\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie query={query} setQuery={setQuery} addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}